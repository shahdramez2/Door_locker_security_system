#ifndef CONTROL_HEADER_H_
#define CONTROL_HEADER_H_

#include "TWI.h"
#include "Buzzer.h"
#include "external_eeprom.h"
#include "uart.h"
#include "dc_motor.h"
#include "timer1.h"
#include "avr/interrupt.h"
#include <util/delay.h>


/*******************************************************************************
 *                                Definition                                   *
 *******************************************************************************/

#define WRONG_PASS                0
#define SETTING_NEW_PASSWORD      1
#define READY_TO_COMMUNICATE      2
#define STEP_3_OPEN_DOOR          3
#define STEP_4_CHANGE_PASS        4
#define MATCH                     5
#define NOT_MATCHING              6

#define PASSWORD_SIZE             2

#define ROTATE_MOTOR_A_CW         0
#define ROTATE_MOTOR_CW           1
#define STOP_MOTOR                2



/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/
/*
 * Description:
 * 	  1- Receive the new password.
 * 	  2- Receive the confirmation password.
 * 	  3- Compare between them.
 * 	  4- In case of the two passwords are not matched return not match.
 * 	  5- In case of the two passwords are matched return wrong.
 * */
uint8 CONTROL_receivePass(void);

/*
 * Description:
 * 	  1- Receive the entered password.
 * 	  2- Get the stored password.
 * 	  3- Compare between them.
 * 	  4- In case of the two passwords are not matched return not match.
 * 	  5- In case of the two passwords are matched return match.
 * */
uint8 CONTROL_checkPassword(void);

/*
 * Description:
 * 	  1- Receive the entered password.
 * 	  2- Get the stored password.
 * 	  3- Compare between them.
 * 	  4- In case of the two passwords are not matched return not match.
 * 	  5- In case of the two passwords are matched return wrong.
 * */
uint8 CONTORL_step1SetNewPass(void);

/*
 * Description:
 * Function to set stop_buzzer after to turn off buzzer
 * after 1 minute from turning it on
 */
void CONTROL_buzzerProcessing(void);

void CONTROL_motorConrolling (void);

#endif /* CONTROL_HEADER_H_ */
