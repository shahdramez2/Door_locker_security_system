/*
 * timer1.h
 *
 *  Created on: Nov 1, 2022
 *      Author: SHAHD MOHAMED
 */

#ifndef TIMER1_H_
#define TIMER1_H_

/************************************************************************************
 *                            Types Declarations
 ************************************************************************************/

typedef enum
{
    STOP_TIMER, F_CPU_1, F_CPU_8, F_CPU_64, F_CPU_256, F_CPU_1024,
	EXTERNAL_CLK_WITH_FALLING_EDGE, EXTERNAL_CLK_WITH_RISING_EDGE
}Timer1_Prescaler;

typedef enum
{
   NORMAL, PWM_PHASE_CORRECT_8_BIT, PWM_PHASE_CORRECT_9_BIT, PWM_PHASE_CORRECT_10_BIT,
   CTC_OCR1A, FAST_PWM_8_BIT, FAST_PWM_9_BIT, FAST_PWM_10_BIT, PWM_PHASE_AND_FREQ_CORRECT_ICR1,
   PWM_PHASE_AND_FREQ_CORRECT_OCR1A, CTC_ICR1, FAST_PWM_ICR1=14, FAST_PWM_OCR1A
}Timer1_Mode;



typedef struct
{
 uint16 compare_value; // it will be used in compare mode only.
 Timer1_Prescaler prescaler;
 Timer1_Mode mode;
} Timer1_ConfigType;

/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/

/*
 * Description:
 * Function to initialize the Timer driver
 */
void Timer1_init(const Timer1_ConfigType * Config_Ptr);

/*
 * Description:
 * Function to disable the Timer driver
 */
void Timer1_deInit(void);


/*
 * Description:
 * Function to set the Call Back function address
 */
void Timer1_setCallBack(void(*a_ptr)(void));


#endif /* TIMER1_H_ */
